version: 2.1
executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/php:7.4.16-browsers
      - image: circleci/mysql:8.0.23
        command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:YlIJx6uH3OUb3hxN+PAiJKlC+EGZ2KYi8VHxsfdJpLk=
      - DB_CONNECTION: mysql
commands:
  install-dockerize:
    steps:
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
  install-php-extensions:
    steps:
      - run:
          name: Install PHP Extensions
          command: sudo docker-php-ext-install pdo_mysql
  restore-cache-composer:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "backend/composer.json" }}
            - v1-dependencies-
  composer-install:
    steps:
      - run:
          name: composer install
          working_directory: backend
          command: composer install -n --prefer-dist
  save-cache-composer:
    steps:
      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "backend/composer.json" }}
  wait-for-mysql:
    steps:
      - run:
          name: Wait for MySQL
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
  migration-seeding:
    steps:
      - run:
          name: Migration & Seeding
          working_directory: backend
          command: php artisan migrate --seed
  test-unittest:
    steps:
      - run:
          name: Unittest
          working_directory: backend
          command: ./vendor/bin/phpunit --migrate-configuration
jobs:
  build:
    executor:
      name: default
    steps:
      - checkout
      - install-dockerize
      - install-php-extensions
      - restore-cache-composer
      - composer-install
      - save-cache-composer
      - wait-for-mysql
      - migration-seeding
      - test-unittest
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - add_ssh_keys:
          fingerprints:
            - ${KEY_FINGERPRINT}
      - run: ssh ${USER_NAME}@${HOST_NAME} 'cd /home/ec2-user/laravel/ && git pull origin master'
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master